trigger: none

parameters:
  - name: agentPool
    type: string
    default: 'ubuntu-latest'
  - name: agent
    type: string
    default: 'default'
  - name: azureSubscription
    type: string
    default: 'Azure subscription 1(27589ab3-7c64-4fdc-a2f4-16e995178402)'
  - name: appName
    type: string
    default: 'default'
  - name: REACT_APP_API_ENDPOINT
    type: string
    default: 'default'
  - name: REACT_APP_APPLICATION_URL
    type: string
    default: 'default'
  - name: REACT_APP_COMPANY
    type: string
    default: 'default'

variables:
  _agentPool: ${{ parameters.agentPool }}
  _agent: ${{ parameters.agent }}
  _azSub: ${{ parameters.azureSubscription }}

pool:
  name: $(_agentPool)
  demands:
  - agent.name -equals $(_agent)

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node.js'

- script: |
    npm install --legacy-peer-deps
    npm run build
  displayName: 'npm install and build'
  env:
    REACT_APP_API_ENDPOINT: ${{ parameters.REACT_APP_API_ENDPOINT }}
    REACT_APP_APPLICATION_URL: ${{ parameters.REACT_APP_APPLICATION_URL }}
    REACT_APP_COMPANY: ${{ parameters.REACT_APP_COMPANY }}

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)/build' # Folder where the React app build output is located
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true
  displayName: 'Archive build output'

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: $(_azSub)
    appType: 'webApp'
    WebAppName: ${{ parameters.appName }}
    package: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
  displayName: 'Deploy to Azure App Service'
  
- publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
  artifact: drop
